#!/bin/env bash

# simple bash script for suckless system prompt.

PROG=$(basename "$0")
DEPS=(dmenu dwm slock)
OPTS=(" lock" "⏾ suspend" " hibernate" " logout")
OPTS+=(" reboot" " poweroff" " restartwm" " displayoff")
XDG_CURRENT_DESKTOP=${XDG_CURRENT_DESKTOP:-dwm}

function lod_err_exit {
    notify-send "$PROG" "$*"
    printf "%s: %s\n" "$PROG" "$*" >&2
    exit 1
}

function print_stdout {
    printf "%s: %s\n" "$PROG" "$*"
}

function main {
    local uptime chosen

    for cmd in "${DEPS[@]}"; do
        if ! command -v "$cmd" >/dev/null; then
            lod_err_exit "'$cmd' command not found."
        fi
    done

    uptime=$(uptime -p | sed -e 's/up //g')
    chosen=$(printf "%s\n" "${OPTS[@]}" | dmenu -i -p "$(hostname): $uptime")

    case "$chosen" in
    *lock) print_stdout "locking screen with slock" && slock ;;
    *suspend) print_stdout "suspending system with zzz" && sudo zzz ;;
    *hibernate) print_stdout "hibernating system with ZZZ" && suspend-hybrid manual ;;
    *logout) print_stdout "logging out" && pkill -x Xorg ;;
    *restartwm) print_stdout "restarting dwm" && pkill -x "$XDG_CURRENT_DESKTOP" ;;
    *reboot) print_stdout "rebooting system" && sudo -A reboot ;;
    *poweroff) print_stdout "powering off system" && sudo -A poweroff ;;
    *displayoff) print_stdout "powering off display" && xset dpms force off ;;
    *) exit ;;
    esac
}

main
