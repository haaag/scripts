#!/usr/bin/env bash

# Output: [ICON  98%]
# Output: [ICON  98% status]
#         
#           
#        
#      
#   
#   
# 

PROG=$(basename "$0")
BAT_CHARGE=$(cat /sys/class/power_supply/BAT0/capacity)
BAT_STATUS=$(cat /sys/class/power_supply/BAT0/status)
CRITICAL=15

# notification icons
warn="🔴"
icon_critical=""
icon_empty=""
icon_low=""
icon_mid=""
icon_full=""
icon_char=""

function notify() {
	local args
	declare -a args=()

	if ! command -v dunstify >/dev/null 2>&1; then
		printf "%s: %s\n" "$PROG" "notify-send is not found"
	fi

	args+=(--appname="Battery" "Battery" "Battery critical: ")
	args+=(--replace=999)
	args+=(--icon="battery-level-10-symbolic")
	args+=(--hints=int:value:"$BAT_CHARGE")
	args+=(--hints=string:x-canonical-private-synchronous:battery)
	dunstify "${args[@]}"
}

function is_charching() {
	local bat_status
	bat_status=$(cat /sys/class/power_supply/BAT0/status)

	if [[ "${bat_status}" != "Charging" ]]; then
		return 1
	fi
	return 0
}

function get_icon() {
	local icon=""

	if is_charching; then
		echo "$icon_char"
		return
	fi

	if [[ "$BAT_CHARGE" -lt "20" ]]; then
		icon="$warn $icon_critical"
	elif [[ "$BAT_CHARGE" -lt "30" ]]; then
		icon="$icon_empty"
	elif [[ "$BAT_CHARGE" -lt "50" ]]; then
		icon="$icon_low"
	elif [[ "$BAT_CHARGE" -lt "90" ]]; then
		icon="$icon_mid"
	else
		icon="$icon_full"
	fi

	echo "$icon"
}

function main() {
	if ! is_charching; then
		if [[ "$BAT_CHARGE" -le "$CRITICAL" ]]; then
			notify
		fi
	fi

	printf "%s" "$SEP1"
	printf "%b %s%%" "$(get_icon)" " $BAT_CHARGE"
	printf "%s\n" "$SEP2"
}

main
