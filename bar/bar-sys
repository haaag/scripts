#!/usr/bin/env bash

# simple systray for dwmblocks

function is_online() {
	if ! ping -q -c 1 "www.linux.org" >/dev/null; then
		return 1
	fi

	return 0
}

function get_interface() {
	local ether="eno1"
	local wlan="wlp2s0"
	declare -A interfaces
	interfaces["$ether"]="" # "" # ""
	interfaces["$wlan"]=""  #"" # ""

	local exclude="loopback"
	local status=$(nmcli device status | grep "$ether\|$wlan")
	local count=$(echo "$status" | grep -c "connected")

	if ! is_online; then
		printf "%s" ""
		return
	fi

	if [[ "$count" -lt 1 ]]; then
		printf "%s" ""
	elif [[ "$count" -eq 1 ]]; then
		local active=$(echo "$status" | grep "connected" | grep -v "$exclude" | awk '{print $1}')
		printf "%s" "${interfaces[$active]}"
	else
		printf "🔴%s" "${interfaces[*]}"
	fi
}

function get_icons() {
	icons=(                )
	icons+=(                )
	icons+=(         )
	icons+=(         )
	icons+=(                  )
}

function is_bluetooth_on() {
	if bluetoothctl show | grep -q "Powered: yes"; then
		printf "%s" ""
		return
	fi
}

function is_microphone_on() {
	local enable=""
	local disable=""
	local card=2
	local mic="Mic"

	amixer -c "$card" get "$mic" &>/dev/null
	local retcode=$?
	if [[ "$retcode" -ne 0 ]]; then
		return
	fi

	local mic_status
	mic_status=$(amixer -c "$card" get "$mic" | grep "Front Left:" | awk '{print $7}')

	if [[ "$mic_status" != "[on]" ]]; then
		echo "$disable"
		return
	fi

	echo "$enable"
}

function is_notifications_on() {
	if ! pgrep -x dunst >/dev/null; then
		echo ""
		return
	fi

	paused=$(dunstctl is-paused)
	if [[ ! $paused == "false" ]]; then
		echo ""
		return
	fi
}

function is_redshift_enable() {
	local enable=""
	local disable="" # ""
	# Get the gamma values from xrandr. When redshift isn't on, all values are 1.0.
	GAMMAX=$(xrandr --verbose | grep 'Gamma' | awk -F ':' '{print $2}' | tr -d ' ')
	GAMMAY=$(xrandr --verbose | grep 'Gamma' | awk -F ':' '{print $3}' | tr -d ' ')
	GAMMAZ=$(xrandr --verbose | grep 'Gamma' | awk -F ':' '{print $4}' | tr -d ' ')

	# Check for at least one value not being 1.0. X appears to stay as 1.0, but Y and Z change.
	if [[ "$GAMMAX" != 1.0 ]] || [[ "$GAMMAY" != 1.0 ]] || [[ "$GAMMAZ" != 1.0 ]]; then
		echo "${enable}"
	else
		echo "${disable}"
	fi
}

function is_running() {
	local cmd="$1"
	local enable="$2"
	local disable="$3"

	if ! pgrep -f "$cmd" >/dev/null; then
		printf "%s" "$disable"
	else
		printf "%s" "$enable"
	fi
}

function main() {
	declare -A programs
	programs["tidal-hifi"]=""
	programs["transmission-daemon"]=""
	programs["ytlocal"]=""
	programs["ollama"]=""
	# programs["mpv"]="" # 
	# programs["newsboat"]="" # ""
	# programs["bitwarden"]=""
	# programs["xbps-install"]=""
	# programs["signal-desktop"]=""
	# programs["nvim"]=""
	# programs["telegram"]="" # ""

	mapfile -t icons < <(get_interface)
	icons+=("$(is_microphone_on)")
	icons+=("$(is_bluetooth_on)")

	for prog in "${!programs[@]}"; do
		icon=${programs[$prog]}
		icons+=("$(is_running "$prog" "$icon")")
	done

	# maybe implement option to display fallback icon if proc not running
	icons+=("$(is_running "xautolock" "" "")")

	icons+=("$(is_notifications_on)")
	icons+=("$(is_redshift_enable)")

	printf "%s" "$SEP1"
	for icon in "${icons[@]}"; do
		[[ -n "$icon" ]] && printf "%s  " "$icon"
	done
	printf "%s\n" "$SEP2"
}

main
