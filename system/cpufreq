#!/usr/bin/env bash

set -o errexit
set -o pipefail

PROG=$(basename "$0")
AVAILABLE="/sys/devices/system/cpu/cpu0/cpufreq/scaling_available_governors"
GOVERNOR=(/sys/devices/system/cpu/cpu*/cpufreq/scaling_governor)
DEPS=(tlp-stat)

# notification
NOTI_ICON="power-profile-performance-symbolic"

# always ask password
sudo -k

# colors
RED=$(tput setaf 1)
MAGENTA=$(tput setaf 5)
RESET="$(tput sgr0)"

function help_modes {
    local scaling_available
    IFS=" " read -r -a scaling_available <<<"$(cat "$AVAILABLE")"
    for available in "${scaling_available[@]}"; do
        printf "    - %s\n" "$available"
    done
}

function usage {
    cat <<-_EOF
usage: $PROG [OPTIONS]

    Set CPU Frequencies

modes:
$(help_modes)

options:
    --set           set mode <MODE>
    -s, --stats     show stats
    -h, --help      display this help and exit
_EOF
}

function log_err {
    local msg="$1"
    printf "%s: %s\n" "$PROG" "$msg" >&2
    exit 1
}

function notify {
    local msg="$1"
    local icon="${2:-dialog-information}"
    local hints="string:x-canonical-private-synchronous:cpufreq"
    dunstify -r 666 -a "$PROG" -i "$icon" -t 3000 "$PROG" "$msg" -h "$hints"
}

function logme {
    local msg="$1"
    local color="$2"
    printf "%s: %b%s%b\n" "$PROG" "$color" "$msg" "$RESET"
}

function mode_available {
    local mode="$1"
    local scaling_available
    IFS=" " read -r -a scaling_available <<<"$(cat "$AVAILABLE")"

    for available in "${scaling_available[@]}"; do
        if [[ "$mode" == "$available" ]]; then
            logme "mode '${mode}' is available" "$MAGENTA"
            return 0
        fi
    done

    return 1
}

function list_modes {
    local scaling_available
    IFS=" " read -r -a scaling_available <<<"$(cat "$AVAILABLE")"
    logme "available modes"
    for available in "${scaling_available[@]}"; do
        printf "  - %b%s%b\n" "$MAGENTA" "$available" "$RESET"
    done
}

function set_mode {
    local mode="$1"

    [[ -z "$mode" ]] && logme "err mode not found" "$RED" && exit 130

    if ! mode_available "$mode"; then
        logme "mode '$mode' not available" "$RED"
        list_modes
        exit 1
    fi

    notify "ðŸ”´ setting to <b>$mode</b> mode" "$NOTI_ICON"
    logme "setting to $mode mode" "$RED"

    echo "$mode" | sudo tee "${GOVERNOR[@]}"
}

function show_stats {
    sudo tlp-stat -p
}

function main {
    local mode="$1"

    for dep in "${DEPS[@]}"; do
        if ! command -v "$dep" >/dev/null; then
            log_err "$dep not found"
        fi
    done

    # show help
    if [[ "${mode:-}" =~ ^-*h(elp)?$ ]]; then
        usage
    fi

    # show stats
    if [[ "${mode:-}" =~ ^-*s(tats)?$ ]]; then
        show_stats
        return 0
    fi

    # set mode
    if [[ "${mode:-}" =~ ^-*set?$ ]]; then
        shift
        set_mode "$1"
        return 0
    fi

    usage

    return 0
}

main "$@"
