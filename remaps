#!/usr/bin/env bash

PROG=$(basename "$0")
LAYOUT="us"
DEPS=(setxkbmap xset)
VARIANT="altgr-intl"
SETXKB=$(which setxkbmap)
ICON="ï„œ"

function logme {
    printf "%s: %s\n" "$PROG" "$1"
}

function log_exit {
    printf "%s: %s\n" "$PROG" "$1" >&2
    exit 1
}

function set_normal_rules {
    local retcode
    $SETXKB -rules evdev \
        -model evdev \
        -layout "${LAYOUT}" \
        -variant "${VARIANT}" \
        -option caps:swapescape \
        -option compose:ralt

    retcode=$?
    if [[ $retcode -ne 0 ]]; then
        log_exit "setxkbmap failed"
    fi
}

function set_rule_esc_and_ctrl {
    local retcode
    $SETXKB -rules evdev \
        -model evdev \
        -layout "${LAYOUT}" \
        -variant "${VARIANT}" \
        -option ctrl:nocaps

    retcode=$?
    if [[ $retcode -ne 0 ]]; then
        log_exit "setxkbmap failed"
    fi

    xcape -e 'Control_L=Escape'
}

function set_rate {
    xset r rate 200 50
    # xset r rate 300 50
    # xset r rate 250 44
}

function get_xkbmap {
    local current
    current=$($SETXKB -query | grep "layout\|variant" | awk '{print $2}' | paste -sd "_")
    echo "$current"
}

function bar_output {
    local current
    current=$(get_xkbmap)
    printf "%b %s" "$ICON" "$current"
}

function main {
    for dep in "${DEPS[@]}"; do
        if ! command -v "${dep}" >/dev/null; then
            log_exit "'${dep}' not found"
        fi
    done

    logme "setting -> ${LAYOUT}_$VARIANT"

    case "$1" in
    alternative)
        set_rule_esc_and_ctrl
        set_rate
        ;;
    bar) bar_output ;;
    *)
        set_normal_rules
        set_rate
        ;;
    esac

    set_normal_rules
    set_rate
    exit 0
}

main "$@"
