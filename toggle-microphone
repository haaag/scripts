#!/usr/bin/env bash

# Simple script checks the current state of the external microphone and
# toggle state (mute/unmute)

program=$(basename "$0")
mic_external=(2 Mic)
mic_external_name="samson"
mic_internal=(1 Capture)

# notify-send icons
iconEnable="$SCRIPT_ICONS/microphone-sensitivity-high-symbolic.svg"
iconDisable="$SCRIPT_ICONS/microphone-sensitivity-muted-symbolic.svg"
iconErr="$SCRIPT_ICONS/dialog-error-symbolic.svg"

check_deps() {
	local dependencies=(dunstify amixer)

	for dep in "${dependencies[@]}"; do
		if ! command -v "$dep" >/dev/null; then
			notify "$iconErr" "$program" "$dep not found"
			error "$dep not found"
		fi
	done
}

error() {
	echo "$program: $*"
	exit 1
}

notify() {
	local icon title msg
	icon="$1"
	title="$2"
	msg="$3"
	hints="string:x-canonical-private-synchronous:microphone"
	dunstify -a "$mic_external_name" -i "$icon" -t 3000 "$title" "$msg" -h "$hints"
}

toggle_power() {
	local channel mic
	channel="$1"
	mic="$2"
	amixer -c "$channel" sset "$mic" toggle &>/dev/null
}

is_connected() {
	local channel mic
	channel="$1"
	mic="$2"

	amixer -c "$channel" get "$mic" &>/dev/null
	exit_status=$?
	if [ $exit_status -eq 0 ]; then
		return 0
	fi

	return 1
}

power_on() {
	local channel mic
	channel="$1"
	mic="$2"

	if ! is_connected "$channel" "$mic"; then
		notify "$iconErr" "" "Disconnected"
		error "$mic_external_name disconnected"
	fi

	mic_status=$(amixer -c "$channel" get "$mic" | grep "Front Left:" | awk '{print $7}')
	if [[ "$mic_status" == "[on]" ]]; then
		return 0
	fi

	return 1
}

main() {
	# Always disable built-in microphone
	if power_on "${mic_internal[@]}"; then
		amixer set Capture nocap &>/dev/null
	fi

	# Toggle external mic 'samson' if connected
	if power_on "${mic_external[@]}"; then
		notify "$iconDisable" "" "Disable"
	else
		notify "$iconEnable" "" "Enable"
	fi
	toggle_power "${mic_external[@]}"
}

check_deps
main
